name: Build EXE 64 and 32 bits

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-64bit:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 64-bit
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Clean previous builds
        shell: powershell
        run: |
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          if (Test-Path build) { Remove-Item -Recurse -Force build }

      - name: Build EXE 64-bit
        run: |
          pyinstaller --onefile --windowed --icon=assets/icono.ico ^
            --add-data "assets;assets" --add-data "db;db" --add-data "gui;gui" main.py

      - name: Check EXE architecture
        shell: powershell
        run: |
          $bytes = Get-Content -Path dist/main.exe -Encoding Byte -TotalCount 1024
          $peOffset = [BitConverter]::ToInt32($bytes[60..63],0)
          $machine = [BitConverter]::ToUInt16($bytes[$peOffset+4..$peOffset+5],0)
          switch ($machine) {
            0x014c { Write-Host "Arquitectura detectada: 32-bit (x86)" }
            0x8664 { Write-Host "Arquitectura detectada: 64-bit (x64)" }
            default { Write-Host "Arquitectura desconocida: $machine" }
          }

      - name: Upload 64bit EXE
        uses: actions/upload-artifact@v4
        with:
          name: PyKey-64bit
          path: dist/main.exe

  build-32bit:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download and install Python 32-bit
        run: |
          Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.11.5/python-3.11.5.exe -OutFile python32.exe
          Start-Process -Wait -FilePath python32.exe -ArgumentList '/quiet InstallAllUsers=1 PrependPath=1 Include_pip=1 TargetDir=C:\Python311_32'
          $env:Path = "C:\Python311_32;$env:Path"

      - name: Verify Python 32-bit
        run: |
          C:\Python311_32\python.exe --version
          C:\Python311_32\python.exe -c "import struct; print('32-bit' if struct.calcsize('P') * 8 == 32 else '64-bit')"

      - name: Install dependencies for 32-bit
        run: |
          C:\Python311_32\python.exe -m pip install --upgrade pip
          C:\Python311_32\python.exe -m pip install -r requirements.txt pyinstaller

      - name: Clean previous builds
        shell: powershell
        run: |
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          if (Test-Path build) { Remove-Item -Recurse -Force build }

      - name: Build EXE 32-bit
        run: |
          C:\Python311_32\Scripts\pyinstaller.exe --onefile --windowed --icon=assets/icono.ico ^
            --add-data "assets;assets" --add-data "db;db" --add-data "gui;gui" main.py

      - name: Check EXE architecture
        shell: powershell
        run: |
          $bytes = Get-Content -Path dist/main.exe -Encoding Byte -TotalCount 1024
          $peOffset = [BitConverter]::ToInt32($bytes[60..63],0)
          $machine = [BitConverter]::ToUInt16($bytes[$peOffset+4..$peOffset+5],0)
          switch ($machine) {
            0x014c { Write-Host "Arquitectura detectada: 32-bit (x86)" }
            0x8664 { Write-Host "Arquitectura detectada: 64-bit (x64)" }
            default { Write-Host "Arquitectura desconocida: $machine" }
          }

      - name: Upload 32bit EXE
        uses: actions/upload-artifact@v4
        with:
          name: PyKey-32bit
          path: dist/main.exe
